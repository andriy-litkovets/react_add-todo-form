{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","getUserById","userId","usersFromServer","find","initialTodos","App","useState","setTodos","setTitle","setUserId","titleError","showTitleError","userError","showUserError","action","method","onSubmit","event","preventDefault","newUserId","newTodo","Math","max","el","toString","trim","type","placeholder","value","onChange","evnt","target","replaceAll","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0278fb74.chunk.js","sourcesContent":["import { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n      />\n    ))}\n  </section>\n);\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React, { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport './App.scss';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUserById(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState(initialTodos);\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n  const [titleError, showTitleError] = useState(false);\n  const [userError, showUserError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    const newUserId = +userId;\n    const maxId = Math.max(...todos.map(el => el.id));\n\n    const newTodo = {\n      id: maxId + 1,\n      title: title.toString().trim(),\n      completed: false,\n      userId: newUserId,\n      user: getUserById(newUserId),\n    };\n\n    if (!title) {\n      showTitleError(true);\n    }\n\n    if (!userId) {\n      showUserError(true);\n    }\n\n    if (title && userId) {\n      setTodos([\n        ...todos,\n        newTodo,\n      ]);\n\n      setUserId(0);\n      setTitle('');\n    }\n  };\n\n  const handleInput = (evnt: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(evnt.target.value.replaceAll(/[^(a-z)(a-—è)\\d\\s]/gi, ''));\n    showTitleError(false);\n  };\n\n  const handleSelect = (evnt: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+evnt.target.value);\n    showUserError(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={title}\n              onChange={handleInput}\n            />\n          </label>\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          {'User: '}\n\n          <select\n            data-cy=\"userSelect\"\n            value={userId}\n            onChange={handleSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(({ id, name }) => (\n              <option key={id} value={id}>\n                { name }\n              </option>\n            ))}\n          </select>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}